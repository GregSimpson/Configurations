
# download jetBrains toolbox
#  https://www.jetbrains.com/help/idea/installation-guide.html
#  https://www.jetbrains.com/toolbox/app/


# https://www.digitalocean.com/community/tutorials/how-to-install-java-with-apt-on-ubuntu-18-04

sudo rm /var/lib/dpkg/lock > /dev/null 2>&1
sudo rm /var/lib/dpkg/lock-frontend > /dev/null 2>&1

sudo apt-get -y update
sudo apt-get -y upgrade
sudo apt -y --fix-broken install

sudo apt-get -y install --upgrade alien
sudo apt-get -y install --upgrade cups-pdf
sudo apt-get -y install --upgrade curl
sudo apt-get -y install --upgrade docker-compose
sudo apt-get -y install --upgrade docker.io
sudo apt-get -y install --upgrade dos2unix
sudo apt-get -y install --upgrade flashplugin-installer
sudo apt-get -y install --upgrade git
sudo apt-get -y install --upgrade gnome-tweak-tool 

sudo apt-get -y install --upgrade ipython
sudo apt-get -y install --upgrade ipython-notebook


#sudo apt-get -y install --upgrade openjdk-11-jdk
sudo apt-get -y install --upgrade openjdk-8-jdk
sudo apt-get -y install --upgrade openvpn

sudo apt-get -y install --upgrade libssl1.0-dev
sudo apt-get -y install --upgrade libcanberra-gtk-module
sudo apt-get -y install --upgrade libcanberra-gtk*

#sudo apt-get -y install --upgrade mongodb-clients
sudo apt-get -y install --upgrade net-tools
sudo apt-get -y install --upgrade nodejs
sudo apt-get -y install --upgrade node-gyp
sudo apt-get -y install --upgrade npm

sudo apt-get -y install --upgrade perl
#sudo apt-get -y install --upgrade postgresql
#sudo apt-get -y install --upgrade postgresql-contrib
#sudo apt-get -y install postgresql postgresql-contrib

# gjs postgres notes here
#  https://linuxize.com/post/how-to-install-postgresql-on-ubuntu-18-04/
#  sudo -u postgres psql -c "SELECT version();"

#sudo apt-get install wget ca-certificates
#wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
#sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main" >> /etc/apt/sources.list.d/pgdg.list'
#sudo apt-get -y install --upgrade pgadmin4
#sudo apt-get -y install --upgrade pgadmin4-apache2

sudo apt-get -y install --upgrade putty
sudo apt-get -y install --upgrade python-matplotlib
sudo apt-get -y install --upgrade python-pip 
sudo apt-get -y install --upgrade python-pyasn1
sudo apt-get -y install --upgrade python-paramiko
sudo apt-get -y install --upgrade python3.6
sudo apt-get -y install --upgrade python3-pandas
sudo apt-get -y install --upgrade python-setuptools

sudo apt-get -y install --upgrade rpm
sudo apt-get -y install --upgrade tree
sudo apt-get -y install --upgrade unity-tweak-tool
sudo apt-get -y install --upgrade vim-gtk
sudo apt-get -y install --upgrade virtualbox-guest-dkms

sudo apt-get -y install --upgrade zim



# https://www.howtoopensource.com/2011/05/installation-of-virtualenv-in-linux
#sudo apt-get -y install python-setuptools
# sudo easy_install virtualenv

## create a virtualenv with
# virtualenv -p python python3 <somename>
## launch a virtualenv with
# source ~/bin/<somename>/bin/activate
## stop a virtualenv
# deactivate

# pip stuff here
#pip install --upgrade pip
#pip install --upgrade tensorflow

#pip install pydbgen

# mongodb install steps here

##  DID work
## https://askubuntu.com/questions/748789/run-mongodb-service-as-daemon-of-systemd-on-ubuntu-15-10
#sudo apt-get remove -y mongodb-org
#sudo apt-get -y install --upgrade mongodb-org

##After installing MongoDB, the commands below can be used to stop, start and enable MongoDB to automatically startup when the systems boots up.

#sudo systemctl stop mongod.service
#sudo systemctl start mongod.service
#sudo systemctl enable mongod.service

##By default, MongoDB listens on port 27017.. after installing, the local server should be able to communicate with MongoDB.. to verify whether MongoDB is running and active, run the commands below:

#sudo systemctl status mongod

##  to setup a user/pswd for mongo, I followed these steps:
##  https://websiteforstudents.com/install-mongodb-on-ubuntu-18-04-lts-beta-server/
##
#mongo --host 127.0.0.1:27017
#use admin
#db.createUser({user:"admin", pwd:"password", roles:[{role:"root", db:"admin"}]})
#db.createUser({user:"hip-ops", pwd:"308D9EA9A255-310B-5C64-251C-18941CC2", roles:[{role:"root", db:"admin"}]})

##  add "--auth"
#sudo gvim /lib/systemd/system/mongod.service

#sudo systemctl daemon-reload
#sudo service mongod restart

#mongo -u admin -p password  --authenticationDatabase admin
#mongo -u hip-ops -p 308D9EA9A255-310B-5C64-251C-18941CC2 --authenticationDatabase admin

##  robo 3t install
## https://github.com/Studio3T/robomongo/releases/tag/v1.2.1
###sudo apt-get install qt5-qmake libqt5core5a qtbase5-dev mongodb-dev libmongo-client-dev libboost-dev libpcre3-dev  libmozjs-24-dev qtbase5-dev-tools qt5-qmake qt5-default
#sudo apt-get install qt5-qmake libqt5core5a qtbase5-dev mongodb-dev libmongo-client-dev libboost-dev libpcre3-dev qtbase5-dev-tools qt5-qmake qt5-default
 #
#sudo apt remove -y cmake
#sudo apt install -y cmake
#cd /home/hipops-dev/robomongo-1.2.1/bin
#./install


#sudo npm install -g -y nodemon
#sudo npm install -g newman

#npm install mongoose --save
#npm install body-parser --save

#sudo npm install -g node-red
#sudo npm install -g --unsafe-perm node-red
#sudo npm install -g node-red-node-mongodb


### to install docker (as a system service )
## https://linuxize.com/post/how-to-install-and-use-docker-on-ubuntu-18-04/
## Start by updating the packages list and installing the dependencies necessary to add a new repository over HTTPS:
#sudo apt-get -y update
#sudo apt-get -y install apt-transport-https ca-certificates curl gnupg-agent software-properties-common
## Import the repositoryâ€™s GPG key using the following curl command:
#curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
## Add the Docker APT repository to your system:
#sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
# To install the latest version of Docker use the command below.
#sudo apt-get -y update
#sudo apt-get -y install docker-ce


#Once the installation is completed the Docker service will start automatically. You can verify it by typing:
#sudo systemctl status docker


#snap install postman
#sudo snap refresh postman

# install anaconda
#  https://linuxhint.com/install_anaconda_python_ubuntu_1804/
#conda install anaconda-navigator
#conda update --all -y


##wildfly (formerly jboss) install notes
## from : https://vitux.com/install-and-configure-wildfly-jboss-on-ubuntu/
##
#sudo groupadd -r wildfly
#sudo useradd -r -g wildfly -d /opt/wildfly -s /sbin/nologin wildfly
## We will be now downloading the tar.gz for WildFly from the official JBoss website.
## First, let us create a variable to define the version number of WildFly that we would like to download.
#export Version_Number=18.0.1.Final
#
## I want to download version 16.0.0.Final now. This variable can be used in all the commands where you need to specify the WildFly version.
## Run the following command to download the tar.gz file to a the /tmp folder of your Ubuntu.
#wget https://download.jboss.org/wildfly/${Version_Number}/wildfly-${Version_Number}.tar.gz -P /tmp
#
#sudo tar xf /tmp/wildfly-${Version_Number}.tar.gz -C /opt/
#sudo ln -s /opt/wildfly-${Version_Number} /opt/wildfly
#sudo chown -RH wildfly: /opt/wildfly
#
#
## configure it to run as a service
#sudo mkdir -p /etc/wildfly
#sudo cp /opt/wildfly/latest/docs/contrib/scripts/systemd/wildfly.conf /etc/wildfly/
#
##sudo gvim /etc/wildfly/wildfly.conf
#
#sudo cp /opt/wildfly/latest/docs/contrib/scripts/systemd/launch.sh /opt/wildfly/latest/bin/
#sudo sh -c 'chmod +x /opt/wildfly/latest/bin/*.sh'
#sudo cp /opt/wildfly/latest/docs/contrib/scripts/systemd/wildfly.service /etc/systemd/system/
#
##  use port 8081
#cd /opt/wildfly/latest/standalone/configuration
#sudo cp standalone.xml standalone.xml.orig
#sudo gvim standalone.xml
## -- change 8080 to 8081
#
#sudo systemctl daemon-reload
#sudo systemctl start wildfly
#sudo systemctl status wildfly
#
#sudo ufw allow 8080/tcp
#sudo ufw allow 8081/tcp
#
#sudo /opt/wildfly/latest/bin/add-user.sh




### Tomcat - modifications
#sudo chmod -R g+rx /opt/tomcat/latest/bin/
#sudo chmod -R g+r /opt/tomcat/latest/conf/
#sudo chmod -R g+rx /opt/tomcat/latest/lib
#sudo chmod -R g+w /opt/tomcat/latest/logs/
#sudo chmod -R g+w /opt/tomcat/latest/temp
#sudo chmod -R g+w /opt/tomcat/latest/webapps
#sudo chmod -R g+w /opt/tomcat/latest/work
#
##Activate the sticky-bit for new files keep permissions defined:
#sudo chmod -R g+s /opt/tomcat/latest/conf
#sudo chmod -R g+s /opt/tomcat/latest/logs
#sudo chmod -R g+s /opt/tomcat/latest/temp
#sudo chmod -R g+s /opt/tomcat/latest/webapps
#sudo chmod -R g+s /opt/tomcat/latest/work
#
#sudo chmod -R a+rx /opt/tomcat/latest/bin/
#sudo chmod -R a+r /opt/tomcat/latest/conf/
#sudo chmod -R a+rx /opt/tomcat/latest/lib
#sudo chmod -R a+wr /opt/tomcat/latest/logs/
#sudo chmod -R a+wr /opt/tomcat/latest/temp
#sudo chmod -R a+wr /opt/tomcat/latest/webapps
#sudo chmod -R a+wr /opt/tomcat/latest/work
#
##Activate the sticky-bit for new files keep permissions defined:
#sudo chmod -R a+s /opt/tomcat/latest/conf
#sudo chmod -R a+s /opt/tomcat/latest/logs
#sudo chmod -R a+s /opt/tomcat/latest/temp
#sudo chmod -R a+s /opt/tomcat/latest/webapps
#sudo chmod -R a+s /opt/tomcat/latest/work



sudo apt -y --fix-broken install
sudo apt -y autoremove
#sudo apt list --upgradeable
